//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace AI.Automation
{

    [Persistent(@"AI.QueueMapping")]
    public partial class AIQueueMapping : XPObject
    {
        string fQueueType;
        [Size(SizeAttribute.Unlimited)]
        public string QueueType
        {
            get { return fQueueType; }
            set { SetPropertyValue<string>(nameof(QueueType), ref fQueueType, value); }
        }
        string fMappingType;
        [Size(SizeAttribute.Unlimited)]
        public string MappingType
        {
            get { return fMappingType; }
            set { SetPropertyValue<string>(nameof(MappingType), ref fMappingType, value); }
        }
        string fSourceField;
        [Size(SizeAttribute.Unlimited)]
        public string SourceField
        {
            get { return fSourceField; }
            set { SetPropertyValue<string>(nameof(SourceField), ref fSourceField, value); }
        }
        string fTargetField;
        [Size(SizeAttribute.Unlimited)]
        public string TargetField
        {
            get { return fTargetField; }
            set { SetPropertyValue<string>(nameof(TargetField), ref fTargetField, value); }
        }
        string fTargetFieldDataType;
        public string TargetFieldDataType
        {
            get { return fTargetFieldDataType; }
            set { SetPropertyValue<string>(nameof(TargetFieldDataType), ref fTargetFieldDataType, value); }
        }
        string fTargetFieldDataFormat;
        public string TargetFieldDataFormat
        {
            get { return fTargetFieldDataFormat; }
            set { SetPropertyValue<string>(nameof(TargetFieldDataFormat), ref fTargetFieldDataFormat, value); }
        }
        string fTargetFieldMaxLength;
        public string TargetFieldMaxLength
        {
            get { return fTargetFieldMaxLength; }
            set { SetPropertyValue<string>(nameof(TargetFieldMaxLength), ref fTargetFieldMaxLength, value); }
        }
        string fDefaultValue;
        public string DefaultValue
        {
            get { return fDefaultValue; }
            set { SetPropertyValue<string>(nameof(DefaultValue), ref fDefaultValue, value); }
        }
        string fSQLStatement;
        [Size(SizeAttribute.Unlimited)]
        public string SQLStatement
        {
            get { return fSQLStatement; }
            set { SetPropertyValue<string>(nameof(SQLStatement), ref fSQLStatement, value); }
        }
        string fCatalogStatement;
        [Size(SizeAttribute.Unlimited)]
        public string CatalogStatement
        {
            get { return fCatalogStatement; }
            set { SetPropertyValue<string>(nameof(CatalogStatement), ref fCatalogStatement, value); }
        }
        string fComment;
        [Size(SizeAttribute.Unlimited)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>(nameof(Comment), ref fComment, value); }
        }
    }

}
