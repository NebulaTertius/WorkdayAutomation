General Development Notes:

***Important To Know***
*************************
The source files do not have any type of indication if a field is removed.
Therefore if a value needs to be removed, a space must be sent in order to be able to remove a historic value in a sequence of files
*************************

To Do On Prod:
Check leave of employee 240005 - This is a very old termination who is pulling through with 199 days leave adjust
Create INCENTIVE Earning Line on FOX
Create REFERRAL_PAY Earning line on AMCS
Update employee codes of new hires where legacy id wasn't updated



Nice to Haves:
Recon Assitance - identify issues such as multiple active employees
Re-process historic records
Option to keep history data when creating structures. (Do not do through SQL, as the EXEC sp_rename does not allow for the table to be dropped by a dynamic SQL afterwards.)



Add levels of checks on new employee records to look at names, id numbers etc, to try warn about a duplicate employee with different emp codes
Or
Add a validation section that will add to warning/error message to supply additional information. Eg: Reinstated event, but including a termination date.
This would most likely mean a change to an old termination, which could just be ignored.



Terminations:
Add an option to include leave for terminated employees, to show if all leave has been removed,
And then add calcs or checks to pay this out.


Not related to this project:
Sage Reporting Tool: Create a query/report assistant. Give options to create a report, such as "Use employee or entity", "Consolidate or per payslip"
As well as things such as a Summary or Detail view, to also assist in building the report layout itself.

Check if Nebula Schemas would make dev easier:
CREATE SCHEMA NTbl --Nebula Tables or Types
CREATE SCHEMA NVws --Nebula Views
CREATE SCHEMA NFun --Nebula Function
CREATE SCHEMA NGrp --Nebula Grouping Option
CREATE SCHEMA NPrc --Nebula Procedures
CREATE SCHEMA NGen --Nebula Generic
CREATE SCHEMA NRep --Nebula Reports
etc.




Training:

Consulting:
A-Z of payroll - find and get copied
Customer Meeting Practice: Person must gather as much information as they can to do a setup
Work on systems: Setup company, structures, calcs 
				Load positions, capture employees, add payments, make payments and generate reports to show reconciliation

Specific cases: Tax calcs with 13th checks, medical aid (with different dependants showing how credits work), and non taxable component
Do a tax year end submission: With differences in tax payments to show how to reconcile and correct
Do a council submission: Must setup, create report, capture data and submit report 



SQL
Selects: Do simple selects with joins to lots of different schemas to show where certain information is
		Go through complex commands
		Show how to reconcile queries, by checking number of records with each join, as well as using another query to balance financials
		Headcount reports with difference between period based status checks, and date driven checks


Dev
Wiki environment: Cloud based environment to add notes while developing, and finding something to write.
			If a dev uses something, then add a hyperlink to the file in their code where it was used. Eg: SQL Stuff command to show scenarios when it is used, and build different examples.

Bug Logging: Check if dynamics can provide this

